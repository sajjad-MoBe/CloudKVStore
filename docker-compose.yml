version: '3.8'

services:
  controller:
    build:
      context: ./kvstore/src
      dockerfile: cmd/controller/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - CONTROLLER_ADDRESS=:8080
    networks:
      - kvstore-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - controller-data:/app/data

  node1:
    build:
      context: ./kvstore/src
      dockerfile: cmd/node/Dockerfile
    ports:
      - "8081:8080"
    environment:
      - NODE_ID=node1
      - NODE_ADDRESS=:8080
      - CONTROLLER_URL=http://controller:8080
    volumes:
      - node1-data:/app/data
    networks:
      - kvstore-network
    depends_on:
      controller:
        condition: service_healthy

  node2:
    build:
      context: ./kvstore/src
      dockerfile: cmd/node/Dockerfile
    ports:
      - "8082:8080"
    environment:
      - NODE_ID=node2
      - NODE_ADDRESS=:8080
      - CONTROLLER_URL=http://controller:8080
    volumes:
      - node2-data:/app/data
    networks:
      - kvstore-network
    depends_on:
      controller:
        condition: service_healthy

  node3:
    build:
      context: ./kvstore/src
      dockerfile: cmd/node/Dockerfile
    ports:
      - "8083:8080"
    environment:
      - NODE_ID=node3
      - NODE_ADDRESS=:8080
      - CONTROLLER_URL=http://controller:8080
    volumes:
      - node3-data:/app/data
    networks:
      - kvstore-network
    depends_on:
      controller:
        condition: service_healthy

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    environment:
      - CONTROLLER_URL=http://controller:8080
      - NODE_URLS=http://node1:8080,http://node2:8080,http://node3:8080
    networks:
      - kvstore-network
    depends_on:
      - node1
      - node2
      - node3

networks:
  kvstore-network:
    driver: bridge

volumes:
  controller-data:
  node1-data:
  node2-data:
  node3-data:
